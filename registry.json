{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "TungShadcn",
  "homepage": "https://react-19.octung112.workers.dev",
  "items": [
    {
      "name": "utils-plus",
      "author": "hihahihahoho",
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/utils-plus.ts",
          "type": "registry:lib",
          "target": "lib/utils-plus.ts"
        }
      ],
      "title": "Utils Plus",
      "description": "Additional utility functions extending the base utils library."
    },
    {
      "name": "zod",
      "author": "hihahihahoho",
      "dependencies": [
        "date-fns",
        "zod"
      ],
      "registryDependencies": [
        "const",
        "file-size"
      ],
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/zod.ts",
          "type": "registry:lib",
          "target": "lib/zod.ts"
        },
        {
          "path": "lib/const.ts",
          "type": "registry:lib"
        },
        {
          "path": "lib/file-size.ts",
          "type": "registry:lib"
        }
      ],
      "title": "Zod",
      "description": "Zod schema utilities for form validation and data parsing."
    },
    {
      "name": "transliterate-vietnamese",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/transliterate-vietnamese.ts",
          "type": "registry:lib",
          "target": "lib/transliterate-vietnamese.ts"
        }
      ],
      "title": "Transliterate Vietnamese",
      "description": "Utility for transliterating Vietnamese text."
    },
    {
      "name": "locale-date",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/locale-date.ts",
          "type": "registry:lib",
          "target": "lib/locale-date.ts"
        }
      ],
      "title": "Locale Date",
      "description": "Date localization utilities."
    },
    {
      "name": "get-node-text",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/get-node-text.ts",
          "type": "registry:lib",
          "target": "lib/get-node-text.ts"
        }
      ],
      "title": "Get Node Text",
      "description": "Utility to extract text content from React nodes."
    },
    {
      "name": "fuzzy-search",
      "author": "hihahihahoho",
      "dependencies": [],
      "registryDependencies": [
        "transliterate-vietnamese"
      ],
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/fuzzy-search.ts",
          "type": "registry:lib",
          "target": "lib/fuzzy-search.ts"
        },
        {
          "path": "lib/transliterate-vietnamese.ts",
          "type": "registry:lib"
        }
      ],
      "title": "Fuzzy Search",
      "description": "Fuzzy search utility for filtering and searching data."
    },
    {
      "name": "file-size",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/file-size.ts",
          "type": "registry:lib",
          "target": "lib/file-size.ts"
        }
      ],
      "title": "File Size",
      "description": "Utility for formatting file sizes."
    },
    {
      "name": "const",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:lib",
      "files": [
        {
          "path": "lib/const.ts",
          "type": "registry:lib",
          "target": "lib/const.ts"
        }
      ],
      "title": "Const",
      "description": "Shared constants and configuration values."
    },
    {
      "name": "button",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-slot",
        "class-variance-authority",
        "lucide-react"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/button.tsx",
          "type": "registry:component",
          "target": "components/ui/button.tsx"
        }
      ],
      "title": "Button",
      "description": "A versatile button component with multiple variants."
    },
    {
      "name": "calendar-range",
      "author": "hihahihahoho",
      "dependencies": [
        "react-day-picker",
        "lucide-react",
        "date-fns"
      ],
      "registryDependencies": [
        "button",
        "calendar",
        "date-time-input",
        "separator",
        "use-media-query",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/calendar/calendar-range.tsx",
          "type": "registry:component",
          "target": "components/ui/calendar/calendar-range.tsx"
        }
      ],
      "title": "Calendar Range",
      "description": "A calendar component for selecting date ranges."
    },
    {
      "name": "calendar",
      "author": "hihahihahoho",
      "dependencies": [
        "react-day-picker",
        "lucide-react",
        "date-fns"
      ],
      "registryDependencies": [
        "button",
        "select",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/calendar/calendar.tsx",
          "type": "registry:component",
          "target": "components/ui/calendar/calendar.tsx"
        },
        {
          "path": "components/ui/calendar/calendar.css",
          "type": "registry:file",
          "target": "components/ui/calendar/calendar.css"
        }
      ],
      "title": "Calendar",
      "description": "A calendar component for date selection."
    },
    {
      "name": "context-menu",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-context-menu",
        "lucide-react"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/context-menu.tsx",
          "type": "registry:component",
          "target": "components/ui/context-menu.tsx"
        }
      ],
      "title": "Context Menu",
      "description": "A context menu component for right-click interactions."
    },
    {
      "name": "hover-card",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-hover-card"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/hover-card.tsx",
          "type": "registry:component",
          "target": "components/ui/hover-card.tsx"
        }
      ],
      "title": "Hover Card",
      "description": "A hover card component for displaying content on hover."
    },
    {
      "name": "collapsible",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-collapsible"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/collapsible.tsx",
          "type": "registry:component",
          "target": "components/ui/collapsible.tsx"
        }
      ],
      "title": "Collapsible",
      "description": "A collapsible component for showing/hiding content."
    },
    {
      "name": "data-row",
      "author": "hihahihahoho",
      "dependencies": [],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/data-row.tsx",
          "type": "registry:component",
          "target": "components/ui/data-row.tsx"
        }
      ],
      "title": "Data Row",
      "description": "A component for displaying key-value data pairs."
    },
    {
      "name": "alert",
      "author": "hihahihahoho",
      "dependencies": [
        "class-variance-authority",
        "lucide-react"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/alert.tsx",
          "type": "registry:component",
          "target": "components/ui/alert.tsx"
        }
      ],
      "title": "Alert",
      "description": "An alert component for displaying important messages."
    },
    {
      "name": "tabs-core",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-tabs",
        "class-variance-authority",
        "motion",
        "@radix-ui/react-slot"
      ],
      "registryDependencies": [
        "use-scroll-into-view",
        "use-wheel-scroll",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/tabs/tabs-core.tsx",
          "type": "registry:component",
          "target": "src/components/ui/tabs/tabs-core.tsx"
        }
      ],
      "title": "Tabs Core",
      "description": "Core tabs component with scroll and wheel navigation support."
    },
    {
      "name": "tabs",
      "author": "hihahihahoho",
      "registryDependencies": [
        "tabs-core"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/tabs/tabs.tsx",
          "type": "registry:component",
          "target": "src/components/ui/tabs/tabs.tsx"
        },
        {
          "path": "components/ui/tabs/tabs-core.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Tabs",
      "description": "A tabs component for organizing content into tabs.",
      "dependencies": [
        "class-variance-authority"
      ]
    },
    {
      "name": "tabs-line",
      "author": "hihahihahoho",
      "registryDependencies": [
        "tabs-core"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/tabs/tabs-line.tsx",
          "type": "registry:component",
          "target": "src/components/ui/tabs/tabs-line.tsx"
        },
        {
          "path": "components/ui/tabs/tabs-core.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Tabs Line",
      "description": "A tabs component with underline indicator.",
      "dependencies": [
        "class-variance-authority"
      ]
    },
    {
      "name": "circle-progress",
      "author": "hihahihahoho",
      "dependencies": [
        "class-variance-authority"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/circle-progress.tsx",
          "type": "registry:component",
          "target": "components/ui/circle-progress.tsx"
        }
      ],
      "title": "Circle Progress",
      "description": "A circular progress indicator component."
    },
    {
      "name": "typography",
      "author": "hihahihahoho",
      "dependencies": [
        "class-variance-authority"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/typography.tsx",
          "type": "registry:component",
          "target": "components/ui/typography.tsx"
        }
      ],
      "title": "Typography",
      "description": "Typography components with consistent styling."
    },
    {
      "name": "tooltip",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-tooltip"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/tooltip.tsx",
          "type": "registry:component",
          "target": "components/ui/tooltip.tsx"
        }
      ],
      "title": "Tooltip",
      "description": "A tooltip component for displaying contextual information."
    },
    {
      "name": "toggle",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-toggle",
        "class-variance-authority"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/toggle.tsx",
          "type": "registry:component",
          "target": "components/ui/toggle.tsx"
        }
      ],
      "title": "Toggle",
      "description": "A toggle button component."
    },
    {
      "name": "toggle-group",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-toggle-group",
        "class-variance-authority"
      ],
      "registryDependencies": [
        "toggle",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/toggle-group.tsx",
          "type": "registry:component",
          "target": "components/ui/toggle-group.tsx"
        },
        {
          "path": "components/ui/toggle.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Toggle Group",
      "description": "A group of toggle buttons."
    },
    {
      "name": "sonner",
      "author": "hihahihahoho",
      "dependencies": [
        "sonner",
        "class-variance-authority",
        "lucide-react"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/sonner.tsx",
          "type": "registry:component",
          "target": "components/ui/sonner.tsx"
        },
        {
          "path": "components/ui/button.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Sonner",
      "description": "Toast notifications using Sonner."
    },
    {
      "name": "skeleton",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/skeleton.tsx",
          "type": "registry:component",
          "target": "components/ui/skeleton.tsx"
        }
      ],
      "title": "Skeleton",
      "description": "Skeleton loading component for placeholder content."
    },
    {
      "name": "sheet",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-dialog",
        "class-variance-authority",
        "@radix-ui/react-slot",
        "lucide-react"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/sheet.tsx",
          "type": "registry:component",
          "target": "components/ui/sheet.tsx"
        }
      ],
      "title": "Sheet",
      "description": "A sheet (drawer) component for side panels."
    },
    {
      "name": "separator",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-separator"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/separator.tsx",
          "type": "registry:component",
          "target": "components/ui/separator.tsx"
        }
      ],
      "title": "Separator",
      "description": "A separator component for dividing content."
    },
    {
      "name": "scroll-area",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-scroll-area"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/scroll-area.tsx",
          "type": "registry:component",
          "target": "components/ui/scroll-area.tsx"
        }
      ],
      "title": "Scroll Area",
      "description": "A custom scrollable area component."
    },
    {
      "name": "popover",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-popover"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/popover.tsx",
          "type": "registry:component",
          "target": "components/ui/popover.tsx"
        }
      ],
      "title": "Popover",
      "description": "A popover component for displaying floating content."
    },
    {
      "name": "photoswipe",
      "author": "hihahihahoho",
      "dependencies": [
        "photoswipe",
        "lucide-react"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/photoswipe.tsx",
          "type": "registry:component",
          "target": "components/ui/photoswipe.tsx"
        }
      ],
      "title": "Photoswipe",
      "description": "Image lightbox and gallery component using PhotoSwipe."
    },
    {
      "name": "pagination",
      "author": "hihahihahoho",
      "dependencies": [
        "lucide-react"
      ],
      "registryDependencies": [
        "button"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/pagination.tsx",
          "type": "registry:component",
          "target": "components/ui/pagination.tsx"
        },
        {
          "path": "components/ui/button.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Pagination",
      "description": "Pagination component for navigating through pages."
    },
    {
      "name": "label",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-label",
        "class-variance-authority"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/label.tsx",
          "type": "registry:component",
          "target": "components/ui/label.tsx"
        }
      ],
      "title": "Label",
      "description": "A label component for form inputs."
    },
    {
      "name": "glass-icon",
      "author": "hihahihahoho",
      "dependencies": [
        "class-variance-authority"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/glass-icon.tsx",
          "type": "registry:component",
          "target": "components/ui/glass-icon.tsx"
        }
      ],
      "title": "Glass Icon",
      "description": "Glassmorphism icon component."
    },
    {
      "name": "empty-state",
      "author": "hihahihahoho",
      "dependencies": [
        "lucide-react"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/empty-state.tsx",
          "type": "registry:component",
          "target": "components/ui/empty-state.tsx"
        }
      ],
      "title": "Empty State",
      "description": "Empty state component for displaying when there's no data."
    },
    {
      "name": "dropdown-menu",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-dropdown-menu",
        "lucide-react"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/dropdown-menu.tsx",
          "type": "registry:component",
          "target": "components/ui/dropdown-menu.tsx"
        }
      ],
      "title": "Dropdown Menu",
      "description": "A dropdown menu component."
    },
    {
      "name": "drawer",
      "author": "hihahihahoho",
      "dependencies": [
        "vaul"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/drawer.tsx",
          "type": "registry:component",
          "target": "components/ui/drawer.tsx"
        }
      ],
      "title": "Drawer",
      "description": "A drawer component for slide-out panels."
    },
    {
      "name": "dialog",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-dialog",
        "lucide-react",
        "@radix-ui/react-slot"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/dialog.tsx",
          "type": "registry:component",
          "target": "components/ui/dialog.tsx"
        }
      ],
      "title": "Dialog",
      "description": "A dialog (modal) component."
    },
    {
      "name": "custom-icons",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/custom-icons.tsx",
          "type": "registry:component",
          "target": "components/ui/custom-icons.tsx"
        }
      ],
      "title": "Custom Icons",
      "description": "Custom icon components."
    },
    {
      "name": "command",
      "author": "hihahihahoho",
      "dependencies": [
        "cmdk",
        "lucide-react",
        "@radix-ui/react-dialog"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/command.tsx",
          "type": "registry:component",
          "target": "components/ui/command.tsx"
        },
        {
          "path": "components/ui/dialog.tsx",
          "type": "registry:component"
        },
        {
          "path": "components/ui/input/command-primitive-input.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Command",
      "description": "A command menu component (like command palette)."
    },
    {
      "name": "card",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/card.tsx",
          "type": "registry:component",
          "target": "components/ui/card.tsx"
        }
      ],
      "title": "Card",
      "description": "A card component for content containers."
    },
    {
      "name": "breadcrumb",
      "author": "hihahihahoho",
      "dependencies": [
        "lucide-react",
        "@radix-ui/react-slot"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/breadcrumb.tsx",
          "type": "registry:component",
          "target": "components/ui/breadcrumb.tsx"
        }
      ],
      "title": "Breadcrumb",
      "description": "A breadcrumb navigation component."
    },
    {
      "name": "avatar",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-avatar",
        "class-variance-authority"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/avatar.tsx",
          "type": "registry:component",
          "target": "components/ui/avatar.tsx"
        }
      ],
      "title": "Avatar",
      "description": "An avatar component for user profile pictures."
    },
    {
      "name": "input",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form"
      ],
      "registryDependencies": [
        "form",
        "use-merge-ref",
        "get-node-text",
        "utils",
        "utils-plus"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/input/input.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input.tsx"
        },
        {
          "path": "components/ui/input/input-form.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input-form.tsx"
        }
      ],
      "title": "Input",
      "description": "Input field component with form integration."
    },
    {
      "name": "input-number",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "@maskito/core",
        "@maskito/kit",
        "@maskito/react"
      ],
      "registryDependencies": [
        "form",
        "use-merge-ref",
        "get-node-text",
        "zod-schema-context",
        "utils",
        "utils-plus"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/input/input-number.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input-number.tsx"
        },
        {
          "path": "components/ui/input/input-number-form.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input-number-form.tsx"
        }
      ],
      "title": "Input Number",
      "description": "Number input with formatting and masking."
    },
    {
      "name": "input-tag",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "@radix-ui/react-popover",
        "@radix-ui/rect",
        "cmdk",
        "lucide-react"
      ],
      "registryDependencies": [
        "avatar",
        "badge",
        "command",
        "form",
        "popover",
        "tooltip",
        "select",
        "select-command",
        "use-history-state",
        "zod-schema-context",
        "utils",
        "utils-plus"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/input/input-tag.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input-tag.tsx"
        },
        {
          "path": "components/ui/input/input-tag-form.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input-tag-form.tsx"
        },
        {
          "path": "components/ui/input/input.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Input Tag",
      "description": "Tag input component for selecting multiple values."
    },
    {
      "name": "input-auto-complete",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "cmdk",
        "@radix-ui/react-popover"
      ],
      "registryDependencies": [
        "command",
        "form",
        "popover",
        "select-command",
        "zod-schema-context",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/input/input-auto-complete.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input-auto-complete.tsx"
        },
        {
          "path": "components/ui/input/input-auto-complete-form.tsx",
          "type": "registry:component",
          "target": "components/ui/input/input-auto-complete-form.tsx"
        }
      ],
      "title": "Input Auto Complete",
      "description": "Auto-complete input component."
    },
    {
      "name": "command-primitive-input",
      "author": "hihahihahoho",
      "dependencies": [
        "cmdk",
        "lucide-react"
      ],
      "registryDependencies": [
        "command",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/input/command-primitive-input.tsx",
          "type": "registry:component",
          "target": "components/ui/input/command-primitive-input.tsx"
        }
      ],
      "title": "Command Primitive Input",
      "description": "Input component for command primitives."
    },
    {
      "name": "textarea",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "zod"
      ],
      "registryDependencies": [
        "form"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/textarea/textarea.tsx",
          "type": "registry:component",
          "target": "components/ui/textarea/textarea.tsx"
        },
        {
          "path": "components/ui/textarea/textarea-form.tsx",
          "type": "registry:component",
          "target": "components/ui/textarea/textarea-form.tsx"
        }
      ],
      "title": "Textarea",
      "description": "Textarea component with auto-resize support."
    },
    {
      "name": "form",
      "author": "hihahihahoho",
      "dependencies": [
        "@hookform/resolvers",
        "react-hook-form",
        "zod",
        "@radix-ui/react-label",
        "@radix-ui/react-slot",
        "class-variance-authority"
      ],
      "registryDependencies": [
        "label",
        "button",
        "custom-icons",
        "utils",
        "zod-schema-context",
        "zod",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/form/form.tsx",
          "type": "registry:component",
          "target": "components/ui/form/form.tsx"
        }
      ],
      "title": "Form",
      "description": "Form components with validation and error handling."
    },
    {
      "name": "zod-schema-context",
      "author": "hihahihahoho",
      "dependencies": [
        "zod"
      ],
      "registryDependencies": [
        "zod"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/form/zod-schema-context.tsx",
          "type": "registry:component",
          "target": "components/ui/form/zod-schema-context.tsx"
        }
      ],
      "title": "Zod Schema Context",
      "description": "Context provider for Zod schema validation."
    },
    {
      "name": "alert-dialog",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-alert-dialog"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/alert-dialog/alert-dialog.tsx",
          "type": "registry:component",
          "target": "components/ui/alert-dialog/alert-dialog.tsx"
        }
      ],
      "title": "Alert Dialog",
      "description": "Alert dialog component for confirmations."
    },
    {
      "name": "alert-dialog-container",
      "author": "hihahihahoho",
      "dependencies": [
        "lucide-react"
      ],
      "registryDependencies": [
        "alert-dialog"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/alert-dialog/alert-dialog-container.tsx",
          "type": "registry:component",
          "target": "components/ui/alert-dialog/alert-dialog-container.tsx"
        },
        {
          "path": "components/ui/alert-dialog/alert-dialog.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Alert Dialog Container",
      "description": "Container for managing alert dialogs."
    },
    {
      "name": "use-scroll",
      "author": "hihahihahoho",
      "dependencies": [],
      "registryDependencies": [
        "use-is-mounted"
      ],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-scroll.ts",
          "type": "registry:hook",
          "target": "hooks/use-scroll.ts"
        }
      ],
      "title": "Use Scroll",
      "description": "Hook for managing scroll behavior."
    },
    {
      "name": "use-file-upload",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-file-upload.ts",
          "type": "registry:hook",
          "target": "hooks/use-file-upload.ts"
        }
      ],
      "title": "Use File Upload",
      "description": "Hook for file upload functionality."
    },
    {
      "name": "use-is-mounted",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-is-mounted.ts",
          "type": "registry:hook",
          "target": "hooks/use-is-mounted.ts"
        }
      ],
      "title": "Use Is Mounted",
      "description": "Hook to check if component is mounted."
    },
    {
      "name": "use-resize-observer",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-resize-observer.ts",
          "type": "registry:hook",
          "target": "hooks/use-resize-observer.ts"
        },
        {
          "path": "hooks/use-is-mounted.ts",
          "type": "registry:hook"
        }
      ],
      "title": "Use Resize Observer",
      "description": "Hook for observing element resize events."
    },
    {
      "name": "use-scroll-position",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-scroll-position.ts",
          "type": "registry:hook",
          "target": "hooks/use-scroll-position.ts"
        }
      ],
      "title": "Use Scroll Position",
      "description": "Hook for tracking scroll position."
    },
    {
      "name": "use-scroll-into-view",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-scroll-into-view.ts",
          "type": "registry:hook",
          "target": "hooks/use-scroll-into-view.ts"
        }
      ],
      "title": "Use Scroll Into View",
      "description": "Hook for scrolling elements into view."
    },
    {
      "name": "use-merge-ref",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-merge-ref.ts",
          "type": "registry:hook",
          "target": "hooks/use-merge-ref.ts"
        }
      ],
      "title": "Use Merge Ref",
      "description": "Hook for merging multiple refs."
    },
    {
      "name": "use-item-overflow",
      "author": "hihahihahoho",
      "dependencies": [],
      "registryDependencies": [
        "use-resize-observer"
      ],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-item-overflow.ts",
          "type": "registry:hook",
          "target": "hooks/use-item-overflow.ts"
        }
      ],
      "title": "Use Item Overflow",
      "description": "Hook for detecting item overflow."
    },
    {
      "name": "use-date-locale-config",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-date-locale-config.ts",
          "type": "registry:hook",
          "target": "hooks/use-date-locale-config.ts"
        }
      ],
      "title": "Use Date Locale Config",
      "description": "Hook for date localization configuration."
    },
    {
      "name": "use-history-state",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-history-state.ts",
          "type": "registry:hook",
          "target": "hooks/use-history-state.ts"
        }
      ],
      "title": "Use History State",
      "description": "Hook for managing history state."
    },
    {
      "name": "use-wheel-scroll",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-wheel-scroll.ts",
          "type": "registry:hook",
          "target": "hooks/use-wheel-scroll.ts"
        }
      ],
      "title": "Use Wheel Scroll",
      "description": "Hook for handling wheel scroll events."
    },
    {
      "name": "use-toast",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-toast.ts",
          "type": "registry:hook",
          "target": "hooks/use-toast.ts"
        }
      ],
      "title": "Use Toast",
      "description": "Hook for displaying toast notifications."
    },
    {
      "name": "use-sync-scroll",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-sync-scroll.ts",
          "type": "registry:hook",
          "target": "hooks/use-sync-scroll.ts"
        }
      ],
      "title": "Use Sync Scroll",
      "description": "Hook for synchronizing scroll between elements."
    },
    {
      "name": "use-mobile",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-mobile.tsx",
          "type": "registry:hook",
          "target": "hooks/use-mobile.tsx"
        }
      ],
      "title": "Use Mobile",
      "description": "Hook for detecting mobile devices."
    },
    {
      "name": "use-is-display-none",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-is-display-none.ts",
          "type": "registry:hook",
          "target": "hooks/use-is-display-none.ts"
        }
      ],
      "title": "Use Is Display None",
      "description": "Hook to check if element has display:none."
    },
    {
      "name": "use-alert-dialog",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-alert-dialog"
      ],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-alert-dialog.ts",
          "type": "registry:hook",
          "target": "hooks/use-alert-dialog.ts"
        }
      ],
      "title": "Use Alert Dialog",
      "description": "Hook for managing alert dialogs."
    },
    {
      "name": "use-autosize-textarea",
      "author": "hihahihahoho",
      "dependencies": [],
      "type": "registry:hook",
      "files": [
        {
          "path": "hooks/use-autosize-textarea.tsx",
          "type": "registry:hook",
          "target": "hooks/use-autosize-textarea.tsx"
        }
      ],
      "title": "Use Autosize Textarea",
      "description": "Hook for auto-resizing textareas."
    },
    {
      "name": "date-time-input",
      "author": "hihahihahoho",
      "dependencies": [
        "date-fns"
      ],
      "registryDependencies": [
        "use-date-locale-config",
        "locale-date"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/date-time-input/date-time-input.tsx",
          "type": "registry:component",
          "target": "components/ui/date-time-input/date-time-input.tsx"
        },
        {
          "path": "components/ui/date-time-input/date-time-input-group.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Date Time Input",
      "description": "Date and time input component."
    },
    {
      "name": "date-time-input-group",
      "author": "hihahihahoho",
      "dependencies": [],
      "registryDependencies": [
        "date-time-input"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/date-time-input/date-time-input-group.tsx",
          "type": "registry:component",
          "target": "components/ui/date-time-input/date-time-input-group.tsx"
        }
      ],
      "title": "Date Time Input Group",
      "description": "Group of date/time inputs."
    },
    {
      "name": "select-command",
      "author": "hihahihahoho",
      "dependencies": [
        "cmdk",
        "lucide-react"
      ],
      "registryDependencies": [
        "avatar",
        "badge",
        "command",
        "checkbox",
        "separator",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/select/select-command.tsx",
          "type": "registry:component",
          "target": "components/ui/select/select-command.tsx"
        },
        {
          "path": "components/ui/select/select-interface.ts",
          "type": "registry:component",
          "target": "components/ui/select/select-interface.ts"
        }
      ],
      "title": "Select Command",
      "description": "Command-based select component with search."
    },
    {
      "name": "select",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "cmdk",
        "@radix-ui/react-popover",
        "lucide-react"
      ],
      "registryDependencies": [
        "avatar",
        "badge",
        "command",
        "form",
        "select-command",
        "separator",
        "zod-schema-context",
        "utils",
        "utils-plus",
        "popover",
        "get-node-text",
        "use-media-query"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/select/select.tsx",
          "type": "registry:component",
          "target": "components/ui/select/select.tsx"
        },
        {
          "path": "components/ui/select/select-form.tsx",
          "type": "registry:component",
          "target": "components/ui/select/select-form.tsx"
        },
        {
          "path": "components/ui/select/select-popover.tsx",
          "type": "registry:component",
          "target": "components/ui/select/select-popover.tsx"
        },
        {
          "path": "components/ui/select/select-command.tsx",
          "type": "registry:component"
        },
        {
          "path": "components/ui/select/select-command-virtualize.tsx",
          "type": "registry:component"
        },
        {
          "path": "components/ui/select/select-interface.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Select",
      "description": "Select dropdown component with search and multi-value support."
    },
    {
      "name": "multiselect",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "cmdk",
        "lucide-react"
      ],
      "registryDependencies": [
        "avatar",
        "badge",
        "command",
        "form",
        "select-command",
        "separator",
        "zod-schema-context",
        "utils",
        "utils-plus"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/select/multiselect.tsx",
          "type": "registry:component",
          "target": "components/ui/select/multiselect.tsx"
        },
        {
          "path": "components/ui/select/multiselect-form.tsx",
          "type": "registry:component",
          "target": "components/ui/select/multiselect-form.tsx"
        },
        {
          "path": "components/ui/select/select-command.tsx",
          "type": "registry:component"
        },
        {
          "path": "components/ui/select/select-command-virtualize.tsx",
          "type": "registry:component"
        },
        {
          "path": "components/ui/select/select-interface.tsx",
          "type": "registry:component"
        },
        {
          "path": "components/ui/select/select-popover.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Multiselect",
      "description": "Multi-select dropdown component."
    },
    {
      "name": "badge",
      "author": "hihahihahoho",
      "dependencies": [
        "class-variance-authority",
        "lucide-react"
      ],
      "registryDependencies": [
        "tooltip",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/badge/badge.tsx",
          "type": "registry:component",
          "target": "components/ui/badge/badge.tsx"
        }
      ],
      "title": "Badge",
      "description": "Badge component for labels and tags."
    },
    {
      "name": "overflow-badge-group",
      "author": "hihahihahoho",
      "dependencies": [],
      "registryDependencies": [
        "badge",
        "use-item-overflow",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/badge/overflow-badge-group.tsx",
          "type": "registry:component",
          "target": "components/ui/badge/overflow-badge-group.tsx"
        }
      ],
      "title": "Overflow Badge Group",
      "description": "Badge group with overflow handling."
    },
    {
      "name": "checkbox",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "@radix-ui/react-checkbox",
        "lucide-react"
      ],
      "registryDependencies": [
        "form",
        "selection-group",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/selection-controls/checkbox.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/checkbox.tsx"
        },
        {
          "path": "components/ui/selection-controls/checkbox-form.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/checkbox-form.tsx"
        },
        {
          "path": "components/ui/selection-controls/checkbox-group-form.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/checkbox-group-form.tsx"
        },
        {
          "path": "components/ui/selection-controls/selection-group.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Checkbox",
      "description": "Checkbox component with form integration."
    },
    {
      "name": "checkbox-tree",
      "author": "hihahihahoho",
      "dependencies": [
        "lucide-react",
        "react-hook-form"
      ],
      "registryDependencies": [
        "checkbox",
        "form",
        "zod-schema-context",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/selection-controls/checkbox-tree.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/checkbox-tree.tsx"
        },
        {
          "path": "components/ui/selection-controls/checkbox-tree-form.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/checkbox-tree-form.tsx"
        },
        {
          "path": "components/ui/selection-controls/checkbox.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Checkbox Tree",
      "description": "Tree view checkbox component for hierarchical selection."
    },
    {
      "name": "radio-group",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "@radix-ui/react-radio-group",
        "lucide-react"
      ],
      "registryDependencies": [
        "form",
        "selection-group",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/selection-controls/radio-group.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/radio-group.tsx"
        },
        {
          "path": "components/ui/selection-controls/radio-group-form.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/radio-group-form.tsx"
        },
        {
          "path": "components/ui/selection-controls/selection-group.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Radio Group",
      "description": "Radio button group component."
    },
    {
      "name": "selection-group",
      "author": "hihahihahoho",
      "dependencies": [
        "class-variance-authority",
        "@radix-ui/react-slot"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/selection-controls/selection-group.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/selection-group.tsx"
        }
      ],
      "title": "Selection Group",
      "description": "Base component for selection controls."
    },
    {
      "name": "switch",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "@radix-ui/react-switch"
      ],
      "registryDependencies": [
        "form",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/selection-controls/switch.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/switch.tsx"
        },
        {
          "path": "components/ui/selection-controls/switch-form.tsx",
          "type": "registry:component",
          "target": "components/ui/selection-controls/switch-form.tsx"
        }
      ],
      "title": "Switch",
      "description": "Switch toggle component."
    },
    {
      "name": "file-upload-list",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "lucide-react"
      ],
      "registryDependencies": [
        "button",
        "custom-icons",
        "dialog",
        "form",
        "glass-icon",
        "sonner",
        "file-size",
        "const",
        "utils",
        "utils-plus",
        "use-file-upload"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/file-upload/file-upload-list.tsx",
          "type": "registry:component",
          "target": "components/ui/file-upload/file-upload-list.tsx"
        },
        {
          "path": "components/ui/file-upload/file-upload-list-form.tsx",
          "type": "registry:component",
          "target": "components/ui/file-upload/file-upload-list-form.tsx"
        }
      ],
      "title": "File Upload List",
      "description": "File upload component with list view."
    },
    {
      "name": "file-upload",
      "author": "hihahihahoho",
      "dependencies": [
        "react-hook-form",
        "lucide-react"
      ],
      "registryDependencies": [
        "button",
        "custom-icons",
        "dialog",
        "form",
        "glass-icon",
        "sonner",
        "file-size",
        "const",
        "utils",
        "utils-plus",
        "use-file-upload"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/file-upload/file-upload.tsx",
          "type": "registry:component",
          "target": "components/ui/file-upload/file-upload.tsx"
        },
        {
          "path": "components/ui/file-upload/file-upload-form.tsx",
          "type": "registry:component",
          "target": "components/ui/file-upload/file-upload-form.tsx"
        }
      ],
      "title": "File Upload",
      "description": "File upload component with drag and drop."
    },
    {
      "name": "toast",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-toast",
        "class-variance-authority",
        "lucide-react"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/toast/toast.tsx",
          "type": "registry:component",
          "target": "components/ui/toast/toast.tsx"
        },
        {
          "path": "components/ui/toast/toaster.tsx",
          "type": "registry:component",
          "target": "components/ui/toast/toaster.tsx"
        }
      ],
      "title": "Toast",
      "description": "Toast notification component."
    },
    {
      "name": "table",
      "author": "hihahihahoho",
      "dependencies": [],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/table/table.tsx",
          "type": "registry:component",
          "target": "components/ui/table/table.tsx"
        }
      ],
      "title": "Table",
      "description": "Table component for displaying tabular data."
    },
    {
      "name": "data-table",
      "author": "hihahihahoho",
      "dependencies": [
        "@tanstack/react-table",
        "class-variance-authority",
        "lucide-react",
        "motion"
      ],
      "registryDependencies": [
        "table",
        "button",
        "empty-state",
        "scroll-area",
        "pagination",
        "select",
        "select-command",
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/table/data-table.tsx",
          "type": "registry:component",
          "target": "components/ui/table/data-table.tsx"
        },
        {
          "path": "components/ui/table/data-table-cell.tsx",
          "type": "registry:component",
          "target": "components/ui/table/data-table-cell.tsx"
        },
        {
          "path": "components/ui/table/data-table-context.tsx",
          "type": "registry:component",
          "target": "components/ui/table/data-table-context.tsx"
        },
        {
          "path": "components/ui/table/data-table-header-cell.tsx",
          "type": "registry:component",
          "target": "components/ui/table/data-table-header-cell.tsx"
        },
        {
          "path": "components/ui/table/data-table-pagination.tsx",
          "type": "registry:component",
          "target": "components/ui/table/data-table-pagination.tsx"
        },
        {
          "path": "components/ui/table/data-table-selection.tsx",
          "type": "registry:component",
          "target": "components/ui/table/data-table-selection.tsx"
        },
        {
          "path": "components/ui/table/data-table-floating-header.tsx",
          "type": "registry:component",
          "target": "components/ui/table/data-table-floating-header.tsx"
        },
        {
          "path": "components/ui/table/header-ref-context.tsx",
          "type": "registry:component",
          "target": "components/ui/table/header-ref-context.tsx"
        },
        {
          "path": "components/ui/table/table.tsx",
          "type": "registry:component"
        }
      ],
      "title": "Data Table",
      "description": "Advanced data table with sorting, filtering, and pagination."
    },
    {
      "name": "accordion",
      "author": "hihahihahoho",
      "dependencies": [
        "@radix-ui/react-accordion",
        "lucide-react"
      ],
      "registryDependencies": [
        "utils"
      ],
      "type": "registry:component",
      "files": [
        {
          "path": "components/ui/accordion/accordion.tsx",
          "type": "registry:component",
          "target": "components/ui/accordion/accordion.tsx"
        }
      ],
      "title": "Accordion",
      "description": "Accordion component for collapsible content sections."
    },
    {
      "name": "use-media-query",
      "author": "hihahihahoho",
      "type": "registry:hook",
      "title": "Use Media Query",
      "description": "Hook for responsive media queries.",
      "dependencies": [],
      "files": [
        {
          "path": "hooks/use-media-query.tsx",
          "type": "registry:hook",
          "target": "hooks/use-media-query.tsx"
        }
      ]
    }
  ]
}